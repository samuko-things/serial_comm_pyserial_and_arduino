

///////// DIFFERENT TASK FOR SERIAL AND I2C COMMUNICATION //////////
/////// NOTE THAT ALL FUNCTIONS SHOULD RETURN A STRING /////////////

//-------------------------------------------------------------------//
int ledState = 0;

void initLed(){
  pinMode(LED_BUILTIN, OUTPUT);
  ledState = 0;
}
void onLed(){
  digitalWrite(LED_BUILTIN, HIGH);
  ledState = 1;
}
void offLed(){
  digitalWrite(LED_BUILTIN, LOW);
  ledState = 0;
}


String setLedState(int state){
  if (state == 1){
    onLed();
    return "1";
  }
  else if (state == 0){
    offLed();
    return "1";
  }
  else {
    return "0";
  }
  
}


String sendLedState(){
  String data = String(ledState);
  return data;
}
//-------------------------------------------------------------------//


//-------------------------------------------------------------------//
float customSineSignal[] = {0.00, -4.99791693e-01, -9.98334166e-01, -1.49438132e+00,
 -1.98669331e+00, -2.47403959e+00, -2.95520207e+00, -3.42897807e+00,
 -3.89418342e+00, -4.34965534e+00, -4.79425539e+00, -5.22687229e+00,
 -5.64642473e+00, -6.05186406e+00, -6.44217687e+00, -6.81638760e+00,
 -7.17356091e+00, -7.51280405e+00, -7.83326910e+00, -8.13415505e+00,
 -8.41470985e+00, -8.67423226e+00, -8.91207360e+00, -9.12763940e+00,
 -9.32039086e+00, -9.48984619e+00, -9.63558185e+00, -9.75723358e+00,
 -9.85449730e+00, -9.92712991e+00, -9.97494987e+00, -9.99783764e+00,
 -9.99573603e+00, -9.96865028e+00, -9.91664810e+00, -9.83985947e+00,
 -9.73847631e+00, -9.61275203e+00, -9.46300088e+00, -9.28959715e+00,
 -9.09297427e+00, -8.87362369e+00, -8.63209367e+00, -8.36898791e+00,
 -8.08496404e+00, -7.78073197e+00, -7.45705212e+00, -7.11473353e+00,
 -6.75463181e+00, -6.37764702e+00, -5.98472144e+00, -5.57683717e+00,
 -5.15501372e+00, -4.72030541e+00, -4.27379880e+00, -3.81660992e+00,
 -3.34988150e+00, -2.87478012e+00, -2.39249329e+00, -1.90422647e+00,
 -1.41120008e+00, -9.14646422e-01, -4.15806624e-01,  8.40724737e-02,
  5.83741434e-01,  1.08195135e+00,  1.57745694e+00,  2.06901972e+00,
  2.55541102e+00,  3.03541513e+00,  3.50783228e+00,  3.97148167e+00,
  4.42520443e+00,  4.86786649e+00,  5.29836141e+00,  5.71561319e+00,
  6.11857891e+00,  6.50625137e+00,  6.87766159e+00,  7.23188124e+00,
  7.56802495e+00,  7.88525254e+00,  8.18277111e+00,  8.45983701e+00,
  8.71575772e+00,  8.94989358e+00,  9.16165937e+00,  9.35052578e+00,
  9.51602074e+00,  9.65773061e+00,  9.77530118e+00,  9.86843859e+00,
  9.93691004e+00,  9.98054439e+00,  9.99923258e+00,  9.99292789e+00,
  9.96164609e+00,  9.90546536e+00,  9.82452613e+00,  9.71903069e+00,
  9.58924275e+00,  9.43548669e+00,  9.25814682e+00,  9.05766641e+00,
  8.83454656e+00,  8.58934493e+00,  8.32267442e+00,  8.03520156e+00,
  7.72764488e+00,  7.40077310e+00,  7.05540326e+00,  6.69239857e+00,
  6.31266638e+00,  5.91715581e+00,  5.50685543e+00,  5.08279077e+00,
  4.64602179e+00,  4.19764018e+00,  3.73876665e+00,  3.27054815e+00,
  2.79415498e+00,  2.31077788e+00,  1.82162504e+00,  1.32791909e+00,
  8.30894028e-01,  3.31792165e-01, -1.68139005e-01, -6.67649915e-01,
 -1.16549205e+00, -1.66042106e+00, -2.15119988e+00, -2.63660182e+00,
 -3.11541364e+00, -3.58643853e+00, -4.04849921e+00, -4.50044074e+00,
 -4.94113351e+00, -5.36947602e+00, -5.78439764e+00, -6.18486128e+00,
 -6.56986599e+00, -6.93844945e+00, -7.28969040e+00, -7.62271092e+00,
 -7.93667864e+00, -8.23080879e+00, -8.50436621e+00, -8.75666714e+00,
 -8.98708096e+00, -9.19503176e+00, -9.37999977e+00, -9.54152266e+00,
 -9.67919672e+00, -9.79267783e+00, -9.88168234e+00, -9.94598779e+00,
 -9.98543345e+00, -9.99992073e+00, -9.98941342e+00, -9.95393777e+00,
 -9.89358247e+00, -9.80849836e+00, -9.69889811e+00, -9.56505567e+00,
 -9.40730557e+00, -9.22604210e+00, -9.02171834e+00, -8.79484498e+00,
 -8.54598908e+00, -8.27577266e+00, -7.98487113e+00, -7.67401157e+00,
 -7.34397098e+00, -6.99557429e+00, -6.62969230e+00, -6.24723954e+00,
 -5.84917193e+00, -5.43648444e+00, -5.01020856e+00, -4.57140978e+00,
 -4.12118485e+00, -3.66065911e+00, -3.19098362e+00, -2.71333234e+00,
 -2.22889914e+00, -1.73889485e+00, -1.24454424e+00, -7.47082904e-01,
 -2.47754255e-01,  2.52193651e-01,  7.51511205e-01,  1.24895037e+00,
  1.74326781e+00,  2.23322799e+00,  2.71760626e+00,  3.19519194e+00,
  3.66479129e+00,  4.12523058e+00,  4.57535894e+00,  5.01405128e+00,
  5.44021111e+00,  5.85277324e+00,  6.25070649e+00,  6.63301623e+00,
  6.99874688e+00,  7.34698430e+00,  7.67685810e+00,  7.98754374e+00,
  8.27826469e+00,  8.54829429e+00,  8.79695760e+00,  9.02363310e+00,
  9.22775422e+00,  9.40881075e+00,  9.56635016e+00,  9.69997868e+00,
  9.80936230e+00,  9.89422762e+00,  9.95436253e+00,  9.98961672e+00,
  9.99990207e+00,  9.98519286e+00,  9.94552588e+00,  9.88100026e+00,
  9.79177729e+00,  9.67807998e+00,  9.54019250e+00,  9.37845951e+00,
  9.19328526e+00,  8.98513258e+00,  8.75452175e+00,  8.50202917e+00,
  8.22828595e+00,  7.93397630e+00,  7.61983584e+00,  7.28664976e+00,
  6.93525085e+00,  6.56651742e+00,  6.18137112e+00,  5.78077461e+00,
  5.36572918e+00,  4.93727222e+00,  4.49647465e+00,  4.04443823e+00,
  3.58229282e+00,  3.11119355e+00,  2.63231791e+00,  2.14686285e+00,
  1.65604175e+00,  1.16108141e+00,  6.63218974e-01,  1.63698832e-01,
 -3.36230472e-01, -8.35319375e-01, -1.33232041e+00, -1.82599135e+00,
 -2.31509825e+00, -2.79841862e+00, -3.27474439e+00, -3.74288501e+00,
 -4.20167037e+00, -4.64995374e+00, -5.08661464e+00, -5.51056166e+00,
 -5.92073515e+00, -6.31610988e+00, -6.69569762e+00, -7.05854961e+00,
 -7.40375890e+00, -7.73046265e+00, -8.03784427e+00, -8.32513546e+00,
 -8.59161815e+00, -8.83662627e+00, -9.05954742e+00, -9.25982443e+00,
 -9.43695669e+00, -9.59050148e+00, -9.72007501e+00, -9.82535342e+00,
 -9.90607356e+00, -9.96203367e+00, -9.99309389e+00, -9.99917657e+00,
 -9.98026653e+00, -9.93641101e+00, -9.86771964e+00, -9.77436411e+00,
 -9.65657777e+00, -9.51465500e+00, -9.34895056e+00, -9.15987860e+00,
 -8.94791172e+00, -8.71357972e+00, -8.45746831e+00, -8.18021763e+00,
 -7.88252067e+00, -7.56512152e+00, -7.22881350e+00, -6.87443720e+00,
 -6.50287840e+00, -6.11506579e+00, -5.71196870e+00, -5.29459466e+00,
 -4.86398689e+00, -4.42122169e+00, -3.96740573e+00, -3.50367333e+00,
 -3.03118357e+00, -2.55111743e+00, -2.06467482e+00, -1.57307160e+00,
 -1.07753652e+00, -5.79308165e-01, -7.96318379e-02,  4.20243527e-01,
  9.19068502e-01,  1.41559628e+00,  1.90858581e+00,  2.39680487e+00,
  2.87903317e+00,  3.35406538e+00,  3.82071417e+00,  4.27781317e+00,
  4.72421986e+00,  5.15881847e+00,  5.58052271e+00,  5.98827856e+00,
  6.38106682e+00,  6.75790575e+00,  7.11785342e+00,  7.46001017e+00,
  7.78352079e+00,  8.08757665e+00,  8.37141778e+00,  8.63433473e+00,
  8.87567034e+00,  9.09482139e+00,  9.29124013e+00,  9.46443560e+00,
  9.61397492e+00,  9.73948430e+00,  9.84065005e+00,  9.91721930e+00,
  9.96900066e+00,  9.99586471e+00,  9.99774431e+00,  9.97463475e+00,
  9.92659380e+00,  9.85374154e+00,  9.75626005e+00,  9.63439300e+00,
  9.48844498e+00,  9.31878079e+00,  9.12582450e+00,  8.91005840e+00,
  8.67202179e+00,  8.41230965e+00,  8.13157112e+00,  7.83050789e+00,
  7.50987247e+00,  7.17046628e+00,  6.81313766e+00,  6.43877974e+00,
  6.04832822e+00,  5.64275904e+00,  5.22308590e+00,  4.79035776e+00,
  4.34565622e+00,  3.89009281e+00,  3.42480618e+00,  2.95095933e+00,
  2.46973662e+00,  1.98234085e+00,  1.48999026e+00,  9.93915469e-01,
  4.95356409e-01,  0.00};

int loopCount = 0;

float getSineSignalVal(){
  int arrayLength = sizeof(customSineSignal) / sizeof(customSineSignal[0]);
  if (loopCount >= arrayLength) loopCount = 0;

  float data = customSineSignal[loopCount];
  loopCount += 1;

  return data;
}

String sendSineSignal(){
  float data = getSineSignalVal();
  return String(data, 10);
}

// String sendSonarDist(){
//   /*put in here the function that handles the dist reading
//   e.g int dist = readSonarDist();*/
//   int dist = readSonarDist();
//   return String(dist);
// }
//-------------------------------------------------------------------//










///////////////// SERIAL COMMUNICATION ///////////////////////////////////
String ser_msg = "";

String serMsg = "", serMsgBuffer, serDataBuffer[3];

void serialReceiveAndSendData() {
  int indexPos = 0, i = 0;

  if (Serial.available() > 0) {
    while (Serial.available())
    {
      serMsg = Serial.readString();
    }
    serMsg.trim();
    if (serMsg != "") {
      do {
        indexPos = serMsg.indexOf(',');
        if (indexPos != -1) {
          serMsgBuffer = serMsg.substring(0, indexPos);
          serMsg = serMsg.substring(indexPos + 1, serMsg.length());
          serDataBuffer[i] = serMsgBuffer;
          serMsgBuffer = "";
        }
        else {
          if (serMsg.length() > 0)
            serDataBuffer[i] = serMsg;
        }
        i += 1;
      } while (indexPos >= 0);
    }


    if (serDataBuffer[0] != ""){

      //// you can add functions in the if else part so it can be handled by the serial communication ////
      
      if (serDataBuffer[0] == "/led-state") {
        if (serDataBuffer[1]=="") ser_msg = sendLedState();
        else ser_msg = setLedState(serDataBuffer[1].toInt());
        Serial.println(ser_msg);
        ser_msg = "";
      }

      else if (serDataBuffer[0] == "/sine") {
        ser_msg = sendSineSignal();
        Serial.println(ser_msg);
        ser_msg = "";
      }

      ////////////////////////////////////////////////////////////////////////////////////////////////////
      
    } else {
      ser_msg = "0";
      Serial.println(ser_msg);
      ser_msg = "";
    }
  }
  
  serMsg = "";
  serMsgBuffer = "";
  serDataBuffer[0] = "";
  serDataBuffer[1] = "";
  serDataBuffer[3] = "";
}
//////////////////////////////////////////////////////////////////////////
